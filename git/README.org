#+title: Peteches Git Stuff
#+PROPERTY: header-args :results silent :mkdirp yes :comments both :eval no


* Prerequisits:
I make use of both GPG signed commits and [[https://pre-commit.com][pre-commit]] tools. My GPG Key is stored securely and will need to be imported onto the machine.
To install pre-commit o Gentoo:
#+begin_src bash :tangle no
  emerge dev-vcs/pre-commit
#+end_src

* Global Ignores
:PROPERTIES:
:header-args: :tangle ~/.config/git/ignore
:END:
[[https://github.com/github/gitignore][GitHub Gitignore]] repo has many great gitignore files for all sorts of stuff, so I'm +stealing+ making use of the good effort they have already put in.
This snippet uses [[https://www.gnu.org/software/emacs/manual/html_node/org/Noweb-Reference-Syntax.html][NoWeb]] to write a babel function that gets the specified gitignore from [[https://github.com/github/gitignore]]
#+name: getIgnores
#+begin_src bash :results output :var ignoreFile="" :eval yes
  echo "# From https://raw.githubusercontent.com/github/gitignore/main/"${ignoreFile}
  curl -vvv https://raw.githubusercontent.com/github/gitignore/main/${ignoreFile}

  echo -e "\n# end " ${ignoreFile}
#+end_src

Then our =gitignore= becomes several calls to that function
#+begin_src conf :noweb yes
  <<getIgnores(ignoreFile="Global/Emacs.gitignore")>>
  <<getIgnores(ignoreFile="Global/Backup.gitignore")>>
  <<getIgnores(ignoreFile="Global/Ansible.gitignore")>>
  <<getIgnores(ignoreFile="Global/Archives.gitignore")>>
  <<getIgnores(ignoreFile="Global/Diff.gitignore")>>
  <<getIgnores(ignoreFile="Global/GPG.gitignore")>>
  <<getIgnores(ignoreFile="Global/Images.gitignore")>>
  <<getIgnores(ignoreFile="Global/Linux.gitignore")>>
  <<getIgnores(ignoreFile="Global/Ninja.gitignore")>>
  <<getIgnores(ignoreFile="Global/Patch.gitignore")>>
  <<getIgnores(ignoreFile="Global/Tags.gitignore")>>
  <<getIgnores(ignoreFile="Global/Vim.gitignore")>>
  <<getIgnores(ignoreFile="Global/VirtualEnv.gitignore")>>
  <<getIgnores(ignoreFile="Global/macOS.gitignore")>>
  <<getIgnores(ignoreFile="Autotools.gitignore")>>
  <<getIgnores(ignoreFile="Elisp.gitignore")>>
  <<getIgnores(ignoreFile="Go.gitignore")>>
  <<getIgnores(ignoreFile="Python.gitignore")>>
  <<getIgnores(ignoreFile="Tex.gitignore")>>
  <<getIgnores(ignoreFile="Terraform.gitignore")>>
#+end_src

* Global Config
:PROPERTIES:
:header-args: :tangle ~/.config/git/config
:END:
There are a lot of [[https://www.git-scm.com/docs/git-config][Git Config]] options.
** User
Set some =User= parameters
#+begin_src conf
  [user]
          name = Pete 'Peteches' McCabe
          email = pete@peteches.co.uk
          signingkey = A6E8150FED0029D7!
#+end_src
** Commit
#+begin_src conf
  [commit]
          gpgSign = true

#+end_src

** Core
These configure the core aspects of Git.
#+begin_src conf
  [core]
          pager = cat # disable paging
          editor = /usr/local/bin/emacsclient --create-frame
          hooksPath = ~/.config/git/hooks.d
#+end_src

** Diff

#+begin_src conf
  [diff]
          context = 5
          algorithm = minimal
          mnemonicPrefix = true

#+end_src

** Pull
#+begin_src conf
  [pull]
          ff = true
          rebase = true
#+end_src

** Push
#+begin_src conf
  [push]
          autoSetupRemote = true
          default = nothing


#+end_src

** ReReRe
#+begin_src conf
  [rerere]
          autoUpdate = true
          enabled = true

#+end_src

** Per Remote configs
*** github
**** Prefer SSH connections
#+begin_src conf
 [url "git@github.com:"]
     insteadOf =  https://github.com/
#+end_src
**** Add github user for [[https://magit.vc/manual/forge.html#Setup-for-Githubcom][forge]]
#+begin_src conf
 [github]
     user = peteches
#+end_src
*** gitlab
**** Prefer SSH connections
#+begin_src conf
  [url "git@gitlab.com:"]
       insteadOf = https://gitlab.com/
#+end_src
**** Add gitlab user for [[https:magit.vc/manual/forge.html#Setup-for-Gitlabcom][forge]]
#+begin_src conf
  [gitlab]
	user = peteches
#+end_src
* Hooks

** Pre commit
I like to use [[https://pre-commit.com/][pre-commit]] to manage all my git hooks, So I will add it as a global pre-commit hook.
#+begin_src bash :tangle ~/.config/git/hooks.d/pre-commit :shebang #!/usr/bin/env bash :eval no

# start templated
INSTALL_PYTHON=/usr/bin/python3
ARGS=(hook-impl --config=.pre-commit-config.yaml --hook-type=pre-commit)
# end templated

HERE="$(cd "$(dirname "$0")" && pwd)"
ARGS+=(--hook-dir "$HERE" -- "$@")

if [ -x "$INSTALL_PYTHON" ]; then
    exec "$INSTALL_PYTHON" -mpre_commit "${ARGS[@]}"
elif command -v pre-commit > /dev/null; then
    exec pre-commit "${ARGS[@]}"
else
    echo '`pre-commit` not found.  Did you forget to activate your virtualenv?' 1>&2
    exit 1
fi
#+end_src
